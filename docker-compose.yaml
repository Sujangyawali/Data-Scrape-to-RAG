version: '3.8'
services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  airflow-webserver:
    image: apache/airflow:2.9.3
    restart: always
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/0
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__PARALLELISM=2
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS=1
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./sample_config:/opt/airflow/sample_config
      - ./.env:/opt/airflow/.env
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements-airflow.txt:/opt/airflow/requirements-airflow.txt
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    command: >
        bash -c "pip install --no-cache-dir -r /opt/airflow/requirements-airflow.txt &&
                 airflow db migrate &&
                 airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com &&
                 airflow webserver --port 8080"
  airflow-scheduler:
    image: apache/airflow:2.9.3
    restart: always
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/0
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./sample_config:/opt/airflow/sample_config
      - ./.env:/opt/airflow/.env
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements-airflow.txt:/opt/airflow/requirements-airflow.txt
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
        bash -c "pip install --no-cache-dir -r /opt/airflow/requirements-airflow.txt &&
                 airflow scheduler"
  airflow-worker:
    image: apache/airflow:2.9.3
    restart: always
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/0
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./sample_config:/opt/airflow/sample_config
      - ./.env:/opt/airflow/.env
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements-airflow.txt:/opt/airflow/requirements-airflow.txt
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
        bash -c "pip install --no-cache-dir -r /opt/airflow/requirements-airflow.txt &&
                 airflow celery worker"
    
  
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    command: uvicorn src.api:app --host 0.0.0.0 --port 8000
    depends_on:
      - minio
      - ollama
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: serve
  pyspark:
    image: bitnami/spark:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    env_file:
      - ./.env
    volumes:
      - ./src:/opt/spark/src
      - ./sample_config:/opt/spark/sample_config
      - ./.env:/opt/spark/.env
      - ./requirements-pyspark.txt:/opt/spark/requirements-pyspark.txt
      - ./data:/opt/spark/data 
    command: >
      bash -c "pip install --no-cache-dir -r /opt/spark/requirements-pyspark.txt &&
                  tail -f /dev/null"
volumes:
  minio_data:
  postgres_data:
  redis_data:
  ollama_data: